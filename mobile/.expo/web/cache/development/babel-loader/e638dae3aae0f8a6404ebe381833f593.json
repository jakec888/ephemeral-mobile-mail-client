{"ast":null,"code":"var _jsxFileName = \"/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/Credentials/CredentialsScreen.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { Container, Content, Form, Item, Input, Label, Button, Text } from 'native-base';\nimport { updateName, updateEmail, updatePassword, updateIMAPServer, updateIMAPPort, updateSMTPServer, updateSMTPPort, authenticateUser } from \"../../redux/actions/user.actions\";\nexport class CredentialsScreen extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChangeName = text => {\n      this.props.updateName(text);\n    };\n\n    this.onChangeEmail = text => {\n      this.props.updateEmail(text);\n    };\n\n    this.onChangePassword = text => {\n      this.props.updatePassword(text);\n    };\n\n    this.onChangeIMAPServer = text => {\n      this.props.updateIMAPServer(text);\n    };\n\n    this.onChangeIMAPPort = text => {\n      this.props.updateIMAPPort(text);\n    };\n\n    this.onChangeSMTPServer = text => {\n      this.props.updateSMTPServer(text);\n    };\n\n    this.onChangeSMTPPort = text => {\n      this.props.updateSMTPPort(text);\n    };\n\n    this.onSubmitUserData = event => {\n      this.props.authenticateUser();\n      this.props.navigation.navigate('App');\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, React.createElement(Content, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Name\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Email\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Password\"), React.createElement(Input, {\n      secureTextEntry: true,\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"IMAP Server\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeIMAPServer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"IMAP Port\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeIMAPPort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"SMTP Server\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeSMTPServer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"SMTP Port\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      onChangeText: this.onChangeSMTPPort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      primary: true,\n      full: true,\n      bordered: true,\n      rounded: true,\n      style: styles.button,\n      onPress: this.onSubmitUserData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Submit\"))))));\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '95%'\n  },\n  input: {\n    borderColor: '#3f51b5'\n  },\n  label: {\n    color: '#3f51b5'\n  },\n  buttonContainer: {\n    margin: '5%'\n  },\n  button: {\n    borderColor: '#3f51b5',\n    color: '#3f51b5',\n    alignSelf: 'center',\n    width: '50%'\n  },\n  buttonText: {\n    color: '#3f51b5'\n  }\n});\n\nvar mapStateToProps = state => ({\n  name: state.Profile.name,\n  email: state.Profile.email,\n  password: state.Profile.password,\n  imap_server: state.Profile.imap_server,\n  imap_port: state.Profile.imap_port,\n  smtp_server: state.Profile.smtp_server,\n  smtp_port: state.Profile.smtp_port,\n  validCredentials: state.Profile.validCredentials\n});\n\nvar mapDispatchToProps = {\n  updateName: updateName,\n  updateEmail: updateEmail,\n  updatePassword: updatePassword,\n  updateIMAPServer: updateIMAPServer,\n  updateIMAPPort: updateIMAPPort,\n  updateSMTPServer: updateSMTPServer,\n  updateSMTPPort: updateSMTPPort,\n  authenticateUser: authenticateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CredentialsScreen);","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/Credentials/CredentialsScreen.js"],"names":["React","Component","connect","Container","Content","Form","Item","Input","Label","Button","Text","updateName","updateEmail","updatePassword","updateIMAPServer","updateIMAPPort","updateSMTPServer","updateSMTPPort","authenticateUser","CredentialsScreen","onChangeName","text","props","onChangeEmail","onChangePassword","onChangeIMAPServer","onChangeIMAPPort","onChangeSMTPServer","onChangeSMTPPort","onSubmitUserData","event","navigation","navigate","render","styles","container","input","label","buttonContainer","button","buttonText","StyleSheet","create","width","borderColor","color","margin","alignSelf","mapStateToProps","state","name","Profile","email","password","imap_server","imap_port","smtp_server","smtp_port","validCredentials","mapDispatchToProps"],"mappings":"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","sourcesContent":["/*\n  Credentials Screen\n\n  this has the same standards and practices that would mirror authentication flows\n*/\n\nimport React, {Component} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {connect} from 'react-redux';\nimport {\n  Container,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n} from 'native-base';\n\nimport {\n  updateName,\n  updateEmail,\n  updatePassword,\n  updateIMAPServer,\n  updateIMAPPort,\n  updateSMTPServer,\n  updateSMTPPort,\n  authenticateUser,\n} from '../../redux/actions/user.actions';\n\nexport class CredentialsScreen extends Component {\n  onChangeName = text => {\n    this.props.updateName(text);\n  };\n\n  onChangeEmail = text => {\n    this.props.updateEmail(text);\n  };\n\n  onChangePassword = text => {\n    this.props.updatePassword(text);\n  };\n\n  onChangeIMAPServer = text => {\n    this.props.updateIMAPServer(text);\n  };\n\n  onChangeIMAPPort = text => {\n    this.props.updateIMAPPort(text);\n  };\n\n  onChangeSMTPServer = text => {\n    this.props.updateSMTPServer(text);\n  };\n\n  onChangeSMTPPort = text => {\n    this.props.updateSMTPPort(text);\n  };\n\n  onSubmitUserData = event => {\n    this.props.authenticateUser();\n    this.props.navigation.navigate('App');\n  };\n\n  render() {\n    return (\n      <Container>\n        <Content style={styles.container}>\n          <Form>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>Name</Label>\n              <Input autoCapitalize=\"none\" onChangeText={this.onChangeName} />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>Email</Label>\n              <Input autoCapitalize=\"none\" onChangeText={this.onChangeEmail} />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>Password</Label>\n              <Input\n                secureTextEntry={true}\n                autoCapitalize=\"none\"\n                onChangeText={this.onChangePassword}\n              />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>IMAP Server</Label>\n              <Input\n                autoCapitalize=\"none\"\n                onChangeText={this.onChangeIMAPServer}\n              />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>IMAP Port</Label>\n              <Input\n                autoCapitalize=\"none\"\n                onChangeText={this.onChangeIMAPPort}\n              />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>SMTP Server</Label>\n              <Input\n                autoCapitalize=\"none\"\n                onChangeText={this.onChangeSMTPServer}\n              />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>SMTP Port</Label>\n              <Input\n                autoCapitalize=\"none\"\n                onChangeText={this.onChangeSMTPPort}\n              />\n            </Item>\n            <View style={styles.buttonContainer}>\n              <Button\n                primary\n                full\n                bordered\n                rounded\n                style={styles.button}\n                onPress={this.onSubmitUserData}>\n                <Text style={styles.buttonText}>Submit</Text>\n              </Button>\n            </View>\n          </Form>\n        </Content>\n      </Container>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '95%',\n  },\n  input: {\n    borderColor: '#3f51b5',\n  },\n  label: {\n    color: '#3f51b5',\n  },\n  buttonContainer: {\n    margin: '5%',\n  },\n  button: {\n    borderColor: '#3f51b5',\n    color: '#3f51b5',\n    alignSelf: 'center',\n    width: '50%',\n  },\n  buttonText: {\n    color: '#3f51b5',\n  },\n});\n\nconst mapStateToProps = state => ({\n  name: state.Profile.name,\n  email: state.Profile.email,\n  password: state.Profile.password,\n  imap_server: state.Profile.imap_server,\n  imap_port: state.Profile.imap_port,\n  smtp_server: state.Profile.smtp_server,\n  smtp_port: state.Profile.smtp_port,\n  validCredentials: state.Profile.validCredentials,\n});\n\nconst mapDispatchToProps = {\n  updateName: updateName,\n  updateEmail: updateEmail,\n  updatePassword: updatePassword,\n  updateIMAPServer: updateIMAPServer,\n  updateIMAPPort: updateIMAPPort,\n  updateSMTPServer: updateSMTPServer,\n  updateSMTPPort: updateSMTPPort,\n  authenticateUser: authenticateUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CredentialsScreen);\n"]},"metadata":{},"sourceType":"module"}