{"ast":null,"code":"var _jsxFileName = \"/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/Root.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./redux/reducers/reducers\";\nimport rootSagas from \"./redux/sagas/sagas\";\nexport default ((_ref) => {\n  var {\n    children,\n    initialState = {}\n  } = _ref;\n  var ReduxSaga = createSagaMiddleware();\n  var middlewares = [ReduxThunk, ReduxSaga];\n  var composeEnhancers = composeWithDevTools(applyMiddleware(...middlewares));\n  var store = createStore(combineReducers(rootReducer), initialState, composeEnhancers);\n  ReduxSaga.run(rootSagas);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, children);\n});","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/Root.js"],"names":["React","Provider","createStore","applyMiddleware","combineReducers","createSagaMiddleware","ReduxThunk","composeWithDevTools","rootReducer","rootSagas","children","initialState","ReduxSaga","middlewares","composeEnhancers","store","run"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,WAAP;AACA,OAAOC,SAAP;AAEA,gBAAe,UAAmC;AAAA,MAAlC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAY,GAAG;AAA1B,GAAkC;AAChD,MAAMC,SAAS,GAAGP,oBAAoB,EAAtC;AAEA,MAAMQ,WAAW,GAAG,CAACP,UAAD,EAAaM,SAAb,CAApB;AAEA,MAAME,gBAAgB,GAAGP,mBAAmB,CAACJ,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAA5C;AAEA,MAAME,KAAK,GAAGb,WAAW,CACvBE,eAAe,CAACI,WAAD,CADQ,EAEvBG,YAFuB,EAGvBG,gBAHuB,CAAzB;AAMAF,EAAAA,SAAS,CAACI,GAAV,CAAcP,SAAd;AAEA,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEM,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,QAAzB,CAAP;AACD,CAhBD","sourcesContent":["import React from 'react';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport ReduxThunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport rootReducer from './redux/reducers/reducers';\nimport rootSagas from './redux/sagas/sagas';\n\nexport default ({children, initialState = {}}) => {\n  const ReduxSaga = createSagaMiddleware();\n\n  const middlewares = [ReduxThunk, ReduxSaga];\n\n  const composeEnhancers = composeWithDevTools(applyMiddleware(...middlewares));\n\n  const store = createStore(\n    combineReducers(rootReducer),\n    initialState,\n    composeEnhancers,\n  );\n\n  ReduxSaga.run(rootSagas);\n\n  return <Provider store={store}>{children}</Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}