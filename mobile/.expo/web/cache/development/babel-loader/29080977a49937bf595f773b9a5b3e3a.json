{"ast":null,"code":"var _jsxFileName = \"/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/Compose/ComposeScreen.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { Container, Form, Item, Input, Label, Button, Text, Textarea, Spinner } from 'native-base';\nimport { updateTo, updateSubject, updateMessage, trashMessage, sendMessage } from \"../../redux/actions/composeEmail.action\";\nexport class ComposeScreen extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.componentDidMount = () => {\n      this.props.validCredentials !== true && this.props.navigation.navigate('Cred');\n    };\n\n    this.onChangeToAddress = text => {\n      this.props.updateToAddress(text);\n    };\n\n    this.onChangeSubject = text => {\n      this.props.updateSubject(text);\n    };\n\n    this.onChangeMessage = text => {\n      this.props.updateMessage(text);\n    };\n\n    this.onSendEmail = event => {\n      this.props.onSendMessage();\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, this.props.loading ? React.createElement(View, {\n      style: styles.spinnerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Spinner, {\n      color: \"#3f51b5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Sending Email...\")) : React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"To\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      value: this.props.currentTo,\n      onChangeText: this.onChangeToAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      floatingLabel: true,\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, React.createElement(Label, {\n      style: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Subject\"), React.createElement(Input, {\n      autoCapitalize: \"none\",\n      value: this.props.currentSubject,\n      onChangeText: this.onChangeSubject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, React.createElement(Textarea, {\n      rowSpan: 10,\n      bordered: true,\n      autoCapitalize: \"none\",\n      placeholder: \"Hi there!\",\n      placeholderTextColor: \"#3f51b5\",\n      style: styles.TextAreaText,\n      value: this.props.currentMessage,\n      onChangeText: this.onChangeMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      danger: true,\n      full: true,\n      bordered: true,\n      rounded: true,\n      style: styles.buttonDelete,\n      onPress: this.props.onTrashMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Delete\")), React.createElement(Button, {\n      primary: true,\n      full: true,\n      bordered: true,\n      rounded: true,\n      style: styles.buttonSend,\n      onPress: this.onSendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextSend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Send\")))));\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '95%'\n  },\n  input: {\n    borderColor: '#3f51b5'\n  },\n  label: {\n    color: '#3f51b5'\n  },\n  TextAreaText: {\n    borderColor: '#fff',\n    width: '100%',\n    fontSize: 18\n  },\n  buttonContainer: {\n    margin: '5%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  buttonDelete: {\n    width: '35%'\n  },\n  buttonTextDelete: {},\n  buttonSend: {\n    borderColor: '#3f51b5',\n    color: '#3f51b5',\n    width: '35%'\n  },\n  buttonTextSend: {\n    color: '#3f51b5'\n  },\n  spinnerContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar mapStateToProps = state => ({\n  validCredentials: state.Profile.validCredentials,\n  currentTo: state.ComposeEmail.to,\n  currentSubject: state.ComposeEmail.subject,\n  currentMessage: state.ComposeEmail.message,\n  emailError: state.ComposeEmail.error,\n  loading: state.ComposeEmail.loading\n});\n\nvar mapDispatchToProps = {\n  updateToAddress: updateTo,\n  updateSubject: updateSubject,\n  updateMessage: updateMessage,\n  onTrashMessage: trashMessage,\n  onSendMessage: sendMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposeScreen);","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/Compose/ComposeScreen.js"],"names":["React","Component","connect","Container","Form","Item","Input","Label","Button","Text","Textarea","Spinner","updateTo","updateSubject","updateMessage","trashMessage","sendMessage","ComposeScreen","componentDidMount","props","validCredentials","navigation","navigate","onChangeToAddress","text","updateToAddress","onChangeSubject","onChangeMessage","onSendEmail","event","onSendMessage","render","styles","container","loading","spinnerContainer","input","label","currentTo","currentSubject","TextAreaText","currentMessage","buttonContainer","buttonDelete","onTrashMessage","buttonTextDelete","buttonSend","buttonTextSend","StyleSheet","create","width","borderColor","color","fontSize","margin","display","flexDirection","justifyContent","flex","alignItems","mapStateToProps","state","Profile","ComposeEmail","to","subject","message","emailError","error","mapDispatchToProps"],"mappings":"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","sourcesContent":["/*\n  Compose Email View\n\n  send emails from the application to any valid email.\n*/\n\nimport React, { Component } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { connect } from 'react-redux'\nimport {\n  Container,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n  Textarea,\n  Spinner\n} from 'native-base'\n\nimport { updateTo, updateSubject, updateMessage, trashMessage, sendMessage } from '../../redux/actions/composeEmail.action'\n\nexport class ComposeScreen extends Component {\n  componentDidMount = () => {\n    this.props.validCredentials !== true && this.props.navigation.navigate('Cred')\n  };\n\n  onChangeToAddress = (text) => {\n    this.props.updateToAddress(text)\n  };\n\n  onChangeSubject = (text) => {\n    this.props.updateSubject(text)\n  };\n\n  onChangeMessage = (text) => {\n    this.props.updateMessage(text)\n  };\n\n  onSendEmail = (event) => {\n    this.props.onSendMessage()\n  };\n\n  render () {\n    return (\n      <Container style={styles.container}>\n        {this.props.loading ? (\n          <View style={styles.spinnerContainer}>\n            <Spinner color=\"#3f51b5\" />\n            <Text>Sending Email...</Text>\n          </View>\n        ) : (\n          <Form>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>To</Label>\n              <Input\n                autoCapitalize=\"none\"\n                value={this.props.currentTo}\n                onChangeText={this.onChangeToAddress}\n              />\n            </Item>\n            <Item floatingLabel style={styles.input}>\n              <Label style={styles.label}>Subject</Label>\n              <Input\n                autoCapitalize=\"none\"\n                value={this.props.currentSubject}\n                onChangeText={this.onChangeSubject}\n              />\n            </Item>\n            <Item style={styles.input}>\n              <Textarea\n                rowSpan={10}\n                bordered\n                autoCapitalize=\"none\"\n                placeholder=\"Hi there!\"\n                placeholderTextColor=\"#3f51b5\"\n                style={styles.TextAreaText}\n                value={this.props.currentMessage}\n                onChangeText={this.onChangeMessage}\n              />\n            </Item>\n            <View style={styles.buttonContainer}>\n              <Button\n                danger\n                full\n                bordered\n                rounded\n                style={styles.buttonDelete}\n                onPress={this.props.onTrashMessage}\n              >\n                <Text style={styles.buttonTextDelete}>Delete</Text>\n              </Button>\n              <Button\n                primary\n                full\n                bordered\n                rounded\n                style={styles.buttonSend}\n                onPress={this.onSendEmail}\n              >\n                <Text style={styles.buttonTextSend}>Send</Text>\n              </Button>\n            </View>\n          </Form>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '95%'\n  },\n  input: {\n    borderColor: '#3f51b5'\n  },\n  label: {\n    color: '#3f51b5'\n  },\n  TextAreaText: {\n    borderColor: '#fff',\n    width: '100%',\n    fontSize: 18\n  },\n  buttonContainer: {\n    margin: '5%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  buttonDelete: {\n    width: '35%'\n  },\n  buttonTextDelete: {},\n  buttonSend: {\n    borderColor: '#3f51b5',\n    color: '#3f51b5',\n    width: '35%'\n  },\n  buttonTextSend: {\n    color: '#3f51b5'\n  },\n  spinnerContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n\nconst mapStateToProps = (state) => ({\n  validCredentials: state.Profile.validCredentials,\n  currentTo: state.ComposeEmail.to,\n  currentSubject: state.ComposeEmail.subject,\n  currentMessage: state.ComposeEmail.message,\n  emailError: state.ComposeEmail.error,\n  loading: state.ComposeEmail.loading\n})\n\nconst mapDispatchToProps = {\n  updateToAddress: updateTo,\n  updateSubject: updateSubject,\n  updateMessage: updateMessage,\n  onTrashMessage: trashMessage,\n  onSendMessage: sendMessage\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComposeScreen)\n"]},"metadata":{},"sourceType":"module"}