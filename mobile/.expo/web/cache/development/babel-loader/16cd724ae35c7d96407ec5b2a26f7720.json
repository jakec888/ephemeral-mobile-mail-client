{"ast":null,"code":"import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport API from \"../../api\";\nimport { GET_EMAILS, retrieveEmailsSuccess } from \"./retrieveEmail.actions\";\n\nvar onLinkRequest = payload => {\n  var {\n    RequestedFolder,\n    email,\n    password,\n    imap_server,\n    imap_port\n  } = payload;\n  var result = API.get('/get-emails', {\n    params: {\n      RequestedFolder,\n      email,\n      password,\n      imap_server,\n      imap_port\n    }\n  });\n  return result;\n};\n\nexport function* getEmailsAsync(_ref) {\n  var {\n    payload\n  } = _ref;\n  var result = yield call(onLinkRequest, payload);\n  yield put(retrieveEmailsSuccess(result));\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(GET_EMAILS, getEmailsAsync)]);\n}","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/redux/actions/retrieveEmail.saga.js"],"names":["all","takeEvery","put","call","API","GET_EMAILS","retrieveEmailsSuccess","onLinkRequest","payload","RequestedFolder","email","password","imap_server","imap_port","result","get","params","getEmailsAsync","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAwC,oBAAxC;AACA,OAAOC,GAAP;AACA,SAAQC,UAAR,EAAoBC,qBAApB;;AAEA,IAAMC,aAAa,GAAGC,OAAO,IAAI;AAC/B,MAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,WAAnC;AAAgDC,IAAAA;AAAhD,MAA6DL,OAAnE;AACA,MAAMM,MAAM,GAAGV,GAAG,CAACW,GAAJ,CAAQ,aAAR,EAAuB;AACpCC,IAAAA,MAAM,EAAE;AACNP,MAAAA,eADM;AAENC,MAAAA,KAFM;AAGNC,MAAAA,QAHM;AAINC,MAAAA,WAJM;AAKNC,MAAAA;AALM;AAD4B,GAAvB,CAAf;AASA,SAAOC,MAAP;AACD,CAZD;;AAcA,OAAO,UAAUG,cAAV,OAAoC;AAAA,MAAX;AAACT,IAAAA;AAAD,GAAW;AACzC,MAAMM,MAAM,GAAG,MAAMX,IAAI,CAACI,aAAD,EAAgBC,OAAhB,CAAzB;AACA,QAAMN,GAAG,CAACI,qBAAqB,CAACQ,MAAD,CAAtB,CAAT;AACD;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,SAAS,CAACI,UAAD,EAAaY,cAAb,CAAV,CAAD,CAAT;AACD","sourcesContent":["import {all, takeEvery, put, call} from 'redux-saga/effects';\nimport API from '../../api';\nimport {GET_EMAILS, retrieveEmailsSuccess} from './retrieveEmail.actions';\n\nconst onLinkRequest = payload => {\n  const {RequestedFolder, email, password, imap_server, imap_port} = payload;\n  const result = API.get('/get-emails', {\n    params: {\n      RequestedFolder,\n      email,\n      password,\n      imap_server,\n      imap_port,\n    },\n  });\n  return result;\n};\n\nexport function* getEmailsAsync({payload}) {\n  const result = yield call(onLinkRequest, payload);\n  yield put(retrieveEmailsSuccess(result));\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(GET_EMAILS, getEmailsAsync)]);\n}\n"]},"metadata":{},"sourceType":"module"}