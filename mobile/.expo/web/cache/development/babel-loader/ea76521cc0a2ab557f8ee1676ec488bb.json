{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { UPDATE_NAME, UPDATE_EMAIL, UPDATE_PASSWORD, UPDATE_IMAP_SERVER, UPDATE_IMAP_PORT, UPDATE_SMTP_SERVER, UPDATE_SMTP_PORT, AUTHENTICATE, UNAUTHENTICATE } from \"../actions/user.actions\";\nvar initialState = {\n  validCredentials: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case UPDATE_NAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: payload.name\n      });\n\n    case UPDATE_EMAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: payload.email\n      });\n\n    case UPDATE_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: payload.password\n      });\n\n    case UPDATE_IMAP_SERVER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        imap_server: payload.imap_server\n      });\n\n    case UPDATE_IMAP_PORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        imap_port: payload.imap_port\n      });\n\n    case UPDATE_SMTP_SERVER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        smtp_server: payload.smtp_server\n      });\n\n    case UPDATE_SMTP_PORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        smtp_port: payload.smtp_port\n      });\n\n    case AUTHENTICATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        validCredentials: payload.validCredentials\n      });\n\n    case UNAUTHENTICATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        validCredentials: payload.validCredentials\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/redux/reducers/user.reducers.js"],"names":["UPDATE_NAME","UPDATE_EMAIL","UPDATE_PASSWORD","UPDATE_IMAP_SERVER","UPDATE_IMAP_PORT","UPDATE_SMTP_SERVER","UPDATE_SMTP_PORT","AUTHENTICATE","UNAUTHENTICATE","initialState","validCredentials","state","type","payload","name","email","password","imap_server","imap_port","smtp_server","smtp_port"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,kBANF,EAOEC,gBAPF,EAQEC,YARF,EASEC,cATF;AAYA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE;AADC,CAArB;AAIA,gBAAe,YAA2C;AAAA,MAA1CC,KAA0C,uEAAlCF,YAAkC;AAAA,MAApB;AAACG,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAoB;;AACxD,UAAQD,IAAR;AACE,SAAKZ,WAAL;AACE,6CAAWW,KAAX;AAAkBG,QAAAA,IAAI,EAAED,OAAO,CAACC;AAAhC;;AACF,SAAKb,YAAL;AACE,6CAAWU,KAAX;AAAkBI,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAAjC;;AACF,SAAKb,eAAL;AACE,6CAAWS,KAAX;AAAkBK,QAAAA,QAAQ,EAAEH,OAAO,CAACG;AAApC;;AACF,SAAKb,kBAAL;AACE,6CAAWQ,KAAX;AAAkBM,QAAAA,WAAW,EAAEJ,OAAO,CAACI;AAAvC;;AACF,SAAKb,gBAAL;AACE,6CAAWO,KAAX;AAAkBO,QAAAA,SAAS,EAAEL,OAAO,CAACK;AAArC;;AACF,SAAKb,kBAAL;AACE,6CAAWM,KAAX;AAAkBQ,QAAAA,WAAW,EAAEN,OAAO,CAACM;AAAvC;;AACF,SAAKb,gBAAL;AACE,6CAAWK,KAAX;AAAkBS,QAAAA,SAAS,EAAEP,OAAO,CAACO;AAArC;;AACF,SAAKb,YAAL;AACE,6CAAWI,KAAX;AAAkBD,QAAAA,gBAAgB,EAAEG,OAAO,CAACH;AAA5C;;AACF,SAAKF,cAAL;AACE,6CAAWG,KAAX;AAAkBD,QAAAA,gBAAgB,EAAEG,OAAO,CAACH;AAA5C;;AACF;AACE,aAAOC,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["import {\n  UPDATE_NAME,\n  UPDATE_EMAIL,\n  UPDATE_PASSWORD,\n  UPDATE_IMAP_SERVER,\n  UPDATE_IMAP_PORT,\n  UPDATE_SMTP_SERVER,\n  UPDATE_SMTP_PORT,\n  AUTHENTICATE,\n  UNAUTHENTICATE,\n} from '../actions/user.actions';\n\nconst initialState = {\n  validCredentials: false,\n};\n\nexport default (state = initialState, {type, payload}) => {\n  switch (type) {\n    case UPDATE_NAME:\n      return {...state, name: payload.name};\n    case UPDATE_EMAIL:\n      return {...state, email: payload.email};\n    case UPDATE_PASSWORD:\n      return {...state, password: payload.password};\n    case UPDATE_IMAP_SERVER:\n      return {...state, imap_server: payload.imap_server};\n    case UPDATE_IMAP_PORT:\n      return {...state, imap_port: payload.imap_port};\n    case UPDATE_SMTP_SERVER:\n      return {...state, smtp_server: payload.smtp_server};\n    case UPDATE_SMTP_PORT:\n      return {...state, smtp_port: payload.smtp_port};\n    case AUTHENTICATE:\n      return {...state, validCredentials: payload.validCredentials};\n    case UNAUTHENTICATE:\n      return {...state, validCredentials: payload.validCredentials};\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}