{"ast":null,"code":"var _jsxFileName = \"/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/ViewEmail/ViewEmailScreen.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WebView from \"react-native-web/dist/exports/WebView\";\nimport { connect } from 'react-redux';\nimport { Container, Content, Text } from 'native-base';\nexport class ViewEmailScreen extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.componentDidMount = () => {\n      this.props.validCredentials !== true && this.props.navigation.navigate('Cred');\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.props.selectedEmail.body_html ? React.createElement(Content, {\n      contentContainerStyle: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, React.createElement(WebView, {\n      originWhitelist: ['*'],\n      source: {\n        html: this.props.selectedEmail.body_html\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })) : React.createElement(Content, {\n      contentContainerStyle: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"\".concat(this.props.selectedEmail.body_plain))));\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  title: {\n    alignSelf: 'center',\n    textAlign: 'center',\n    fontWeight: '600'\n  }\n});\n\nvar mapStateToProps = state => ({\n  validCredentials: state.Profile.validCredentials,\n  selectedEmail: state.SelectedEmail\n});\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewEmailScreen);","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/screens/ViewEmail/ViewEmailScreen.js"],"names":["React","Component","connect","Container","Content","Text","ViewEmailScreen","componentDidMount","props","validCredentials","navigation","navigate","render","selectedEmail","body_html","flex","html","body_plain","styles","StyleSheet","create","container","backgroundColor","title","alignSelf","textAlign","fontWeight","mapStateToProps","state","Profile","SelectedEmail","mapDispatchToProps"],"mappings":";AAcA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,IAA5B,QAAuC,aAAvC;AAEA,OAAO,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAC7CM,iBAD6C,GACzB,MAAM;AACxB,WAAKC,KAAL,CAAWC,gBAAX,KAAgC,IAAhC,IACE,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CADF;AAED,KAJ4C;AAAA;;AAM7CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWK,aAAX,CAAyBC,SAAzB,GACC,oBAAC,OAAD;AAAS,MAAA,qBAAqB,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,eAAe,EAAE,CAAC,GAAD,CADnB;AAEE,MAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWK,aAAX,CAAyBC;AAAhC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAQC,oBAAC,OAAD;AAAS,MAAA,qBAAqB,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKP,KAAL,CAAWK,aAAX,CAAyBI,UAAnC,EADF,CATJ,CADF;AAgBD;;AAvB4C;AA0B/C,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,UAAU,EAAE;AAHP;AALwB,CAAlB,CAAf;;AAYA,IAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCnB,EAAAA,gBAAgB,EAAEmB,KAAK,CAACC,OAAN,CAAcpB,gBADA;AAEhCI,EAAAA,aAAa,EAAEe,KAAK,CAACE;AAFW,CAAL,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAe7B,OAAO,CAACyB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CzB,eAA7C,CAAf","sourcesContent":["/*\n  View Email Screen\n\n  shows the selected email\n  - subject\n  - date\n  - name\n  - email\n  - html and plain text body\n\n  switch between html and plain text depending on which is avaiable; html is preferable\n  avatar should be the first letter of the first name and last name. example => Jake Condes = JC\n*/\n\nimport React, {Component} from 'react';\nimport {StyleSheet, WebView} from 'react-native';\nimport {connect} from 'react-redux';\nimport {Container, Content, Text} from 'native-base';\n\nexport class ViewEmailScreen extends Component {\n  componentDidMount = () => {\n    this.props.validCredentials !== true &&\n      this.props.navigation.navigate('Cred');\n  };\n\n  render() {\n    return (\n      <Container>\n        {this.props.selectedEmail.body_html ? (\n          <Content contentContainerStyle={{flex: 1}}>\n            <WebView\n              originWhitelist={['*']}\n              source={{html: this.props.selectedEmail.body_html}}\n            />\n          </Content>\n        ) : (\n          <Content contentContainerStyle={{flex: 1}}>\n            <Text>{`${this.props.selectedEmail.body_plain}`}</Text>\n          </Content>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  title: {\n    alignSelf: 'center',\n    textAlign: 'center',\n    fontWeight: '600',\n  },\n});\n\nconst mapStateToProps = state => ({\n  validCredentials: state.Profile.validCredentials,\n  selectedEmail: state.SelectedEmail,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewEmailScreen);\n"]},"metadata":{},"sourceType":"module"}