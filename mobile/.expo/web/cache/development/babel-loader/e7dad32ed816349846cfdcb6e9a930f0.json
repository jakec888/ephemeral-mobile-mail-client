{"ast":null,"code":"export var COMPOSE_TO = 'COMPOSE_TO';\nexport var COMPOSE_SUBJECT = 'COMPOSE_SUBJECT';\nexport var COMPOSE_MESSAGE = 'COMPOSE_MESSAGE';\nexport var TRASH_MESSAGE = 'TRASH_MESSAGE';\nexport var SEND_MESSAGE = 'SEND_MESSAGE';\nexport var SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport var ERROR_SEND_MESSAGE = 'ERROR_SEND_MESSAGE';\nexport var LOADING = 'LOADING';\nexport var updateTo = toAddress => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_TO,\n      payload: {\n        to: toAddress\n      }\n    });\n  };\n};\nexport var updateSubject = subject => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_SUBJECT,\n      payload: {\n        subject\n      }\n    });\n  };\n};\nexport var updateMessage = message => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_MESSAGE,\n      payload: {\n        message\n      }\n    });\n  };\n};\nexport var trashMessage = () => {\n  return dispatch => {\n    dispatch({\n      type: TRASH_MESSAGE,\n      payload: {\n        to: '',\n        subject: '',\n        message: ''\n      }\n    });\n  };\n};\nexport var sendMessage = () => (dispatch, getState) => {\n  var profile = getState().Profile;\n  var email = getState().ComposeEmail;\n  dispatch({\n    type: SEND_MESSAGE,\n    payload: {\n      email: profile.email,\n      password: profile.password,\n      smtp_server: profile.smtp_server,\n      smtp_port: profile.smtp_port,\n      fromAddress: profile.email,\n      name: profile.name,\n      toAddress: email.to,\n      subject: email.subject,\n      bodyPLAIN: email.message\n    }\n  });\n};\nexport var sendMessageSuccess = result => dispatch => {\n  dispatch({\n    type: SEND_MESSAGE_SUCCESS,\n    payload: {\n      to: '',\n      subject: '',\n      message: '',\n      error: ''\n    }\n  });\n  alert('Email Successfully Sent');\n};","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/redux/actions/composeEmail.action.js"],"names":["COMPOSE_TO","COMPOSE_SUBJECT","COMPOSE_MESSAGE","TRASH_MESSAGE","SEND_MESSAGE","SEND_MESSAGE_SUCCESS","ERROR_SEND_MESSAGE","LOADING","updateTo","toAddress","dispatch","type","payload","to","updateSubject","subject","updateMessage","message","trashMessage","sendMessage","getState","profile","Profile","email","ComposeEmail","password","smtp_server","smtp_port","fromAddress","name","bodyPLAIN","sendMessageSuccess","result","error","alert"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,IAAMC,QAAQ,GAAGC,SAAS,IAAI;AACnC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,UADC;AAEPY,MAAAA,OAAO,EAAE;AAACC,QAAAA,EAAE,EAAEJ;AAAL;AAFF,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMK,aAAa,GAAGC,OAAO,IAAI;AACtC,SAAOL,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,eADC;AAEPW,MAAAA,OAAO,EAAE;AAACG,QAAAA;AAAD;AAFF,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMC,aAAa,GAAGC,OAAO,IAAI;AACtC,SAAOP,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,eADC;AAEPU,MAAAA,OAAO,EAAE;AAACK,QAAAA;AAAD;AAFF,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMC,YAAY,GAAG,MAAM;AAChC,SAAOR,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,aADC;AAEPS,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAE,EADG;AAEPE,QAAAA,OAAO,EAAE,EAFF;AAGPE,QAAAA,OAAO,EAAE;AAHF;AAFF,KAAD,CAAR;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,IAAME,WAAW,GAAG,MAAM,CAACT,QAAD,EAAWU,QAAX,KAAwB;AACvD,MAAMC,OAAO,GAAGD,QAAQ,GAAGE,OAA3B;AACA,MAAMC,KAAK,GAAGH,QAAQ,GAAGI,YAAzB;AACAd,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,YADC;AAEPQ,IAAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAEF,OAAO,CAACE,KADR;AAEPE,MAAAA,QAAQ,EAAEJ,OAAO,CAACI,QAFX;AAGPC,MAAAA,WAAW,EAAEL,OAAO,CAACK,WAHd;AAIPC,MAAAA,SAAS,EAAEN,OAAO,CAACM,SAJZ;AAKPC,MAAAA,WAAW,EAAEP,OAAO,CAACE,KALd;AAMPM,MAAAA,IAAI,EAAER,OAAO,CAACQ,IANP;AAOPpB,MAAAA,SAAS,EAAEc,KAAK,CAACV,EAPV;AAQPE,MAAAA,OAAO,EAAEQ,KAAK,CAACR,OARR;AASPe,MAAAA,SAAS,EAAEP,KAAK,CAACN;AATV;AAFF,GAAD,CAAR;AAcD,CAjBM;AAmBP,OAAO,IAAMc,kBAAkB,GAAGC,MAAM,IAAItB,QAAQ,IAAI;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,oBADC;AAEPO,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,EADG;AAEPE,MAAAA,OAAO,EAAE,EAFF;AAGPE,MAAAA,OAAO,EAAE,EAHF;AAIPgB,MAAAA,KAAK,EAAE;AAJA;AAFF,GAAD,CAAR;AASAC,EAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,CAXM","sourcesContent":["export const COMPOSE_TO = 'COMPOSE_TO';\nexport const COMPOSE_SUBJECT = 'COMPOSE_SUBJECT';\nexport const COMPOSE_MESSAGE = 'COMPOSE_MESSAGE';\nexport const TRASH_MESSAGE = 'TRASH_MESSAGE';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const ERROR_SEND_MESSAGE = 'ERROR_SEND_MESSAGE';\nexport const LOADING = 'LOADING';\n\nexport const updateTo = toAddress => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_TO,\n      payload: {to: toAddress},\n    });\n  };\n};\n\nexport const updateSubject = subject => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_SUBJECT,\n      payload: {subject},\n    });\n  };\n};\n\nexport const updateMessage = message => {\n  return dispatch => {\n    dispatch({\n      type: COMPOSE_MESSAGE,\n      payload: {message},\n    });\n  };\n};\n\nexport const trashMessage = () => {\n  return dispatch => {\n    dispatch({\n      type: TRASH_MESSAGE,\n      payload: {\n        to: '',\n        subject: '',\n        message: '',\n      },\n    });\n  };\n};\n\nexport const sendMessage = () => (dispatch, getState) => {\n  const profile = getState().Profile;\n  const email = getState().ComposeEmail;\n  dispatch({\n    type: SEND_MESSAGE,\n    payload: {\n      email: profile.email,\n      password: profile.password,\n      smtp_server: profile.smtp_server,\n      smtp_port: profile.smtp_port,\n      fromAddress: profile.email,\n      name: profile.name,\n      toAddress: email.to,\n      subject: email.subject,\n      bodyPLAIN: email.message,\n    },\n  });\n};\n\nexport const sendMessageSuccess = result => dispatch => {\n  dispatch({\n    type: SEND_MESSAGE_SUCCESS,\n    payload: {\n      to: '',\n      subject: '',\n      message: '',\n      error: '',\n    },\n  });\n  alert('Email Successfully Sent');\n};\n"]},"metadata":{},"sourceType":"module"}