{"ast":null,"code":"import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport API from \"../../api\";\nimport { SEND_MESSAGE, sendMessageSuccess } from \"./composeEmail.action\";\n\nvar onSendEmailRequest = payload => {\n  var {\n    email,\n    password,\n    smtp_server,\n    smtp_port,\n    fromAddress,\n    name,\n    toAddress,\n    subject,\n    bodyPLAIN\n  } = payload;\n  var result = API.post('/send-email', {\n    email,\n    password,\n    smtp_server,\n    smtp_port,\n    fromAddress,\n    name,\n    toAddress,\n    subject,\n    bodyPLAIN\n  });\n  return result;\n};\n\nexport function* sendMessageAsync(_ref) {\n  var {\n    payload\n  } = _ref;\n  var result = yield call(onSendEmailRequest, payload);\n  yield put(sendMessageSuccess(result));\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(SEND_MESSAGE, sendMessageAsync)]);\n}","map":{"version":3,"sources":["/Users/jaconcondes/Desktop/ephemeral-mobile-mail-client/mobile/redux/actions/composeEmail.saga.js"],"names":["all","takeEvery","put","call","API","SEND_MESSAGE","sendMessageSuccess","onSendEmailRequest","payload","email","password","smtp_server","smtp_port","fromAddress","name","toAddress","subject","bodyPLAIN","result","post","sendMessageAsync","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAwC,oBAAxC;AACA,OAAOC,GAAP;AACA,SAAQC,YAAR,EAAsBC,kBAAtB;;AAEA,IAAMC,kBAAkB,GAAGC,OAAO,IAAI;AACpC,MAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA;AATI,MAUFT,OAVJ;AAWA,MAAMU,MAAM,GAAGd,GAAG,CAACe,IAAJ,CAAS,aAAT,EAAwB;AACrCV,IAAAA,KADqC;AAErCC,IAAAA,QAFqC;AAGrCC,IAAAA,WAHqC;AAIrCC,IAAAA,SAJqC;AAKrCC,IAAAA,WALqC;AAMrCC,IAAAA,IANqC;AAOrCC,IAAAA,SAPqC;AAQrCC,IAAAA,OARqC;AASrCC,IAAAA;AATqC,GAAxB,CAAf;AAWA,SAAOC,MAAP;AACD,CAxBD;;AA0BA,OAAO,UAAUE,gBAAV,OAAsC;AAAA,MAAX;AAACZ,IAAAA;AAAD,GAAW;AAC3C,MAAMU,MAAM,GAAG,MAAMf,IAAI,CAACI,kBAAD,EAAqBC,OAArB,CAAzB;AACA,QAAMN,GAAG,CAACI,kBAAkB,CAACY,MAAD,CAAnB,CAAT;AACD;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CAACC,SAAS,CAACI,YAAD,EAAee,gBAAf,CAAV,CAAD,CAAT;AACD","sourcesContent":["import {all, takeEvery, put, call} from 'redux-saga/effects';\nimport API from '../../api';\nimport {SEND_MESSAGE, sendMessageSuccess} from './composeEmail.action';\n\nconst onSendEmailRequest = payload => {\n  const {\n    email,\n    password,\n    smtp_server,\n    smtp_port,\n    fromAddress,\n    name,\n    toAddress,\n    subject,\n    bodyPLAIN,\n  } = payload;\n  const result = API.post('/send-email', {\n    email,\n    password,\n    smtp_server,\n    smtp_port,\n    fromAddress,\n    name,\n    toAddress,\n    subject,\n    bodyPLAIN,\n  });\n  return result;\n};\n\nexport function* sendMessageAsync({payload}) {\n  const result = yield call(onSendEmailRequest, payload);\n  yield put(sendMessageSuccess(result));\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(SEND_MESSAGE, sendMessageAsync)]);\n}\n"]},"metadata":{},"sourceType":"module"}